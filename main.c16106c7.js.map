{"version":3,"sources":["scripts/main.js"],"names":["body","document","querySelector","message","type","text","messageSay","createElement","className","setAttribute","innerText","append","firstPromise","Promise","resolve","reject","addEventListener","setTimeout","Error","secondPromise","withoutMenu","preventDefault","thirdPromise","leftB","rightB","pressed","button","then"],"mappings":";AAAA,aAEA,IAAMA,EAAOC,SAASC,cAAc,QAE9BC,EAAU,SAACC,EAAMC,GACfC,IAAAA,EAAaL,SAASM,cAAc,OAE1CD,EAAWE,UAAeJ,GAAAA,OAAAA,GAC1BE,EAAWG,aAAa,UAAW,gBACnCH,EAAWI,UAAeL,GAAAA,OAAAA,GAE1BL,EAAKW,OAAOL,IAGRM,EAAe,IAAIC,QAAQ,SAACC,EAASC,GACzCf,EAAKgB,iBAAiB,QAAS,WAC7BF,EAAQ,gCAGVG,WAAW,WAAMF,OAAAA,EAAOG,MAAM,gCAAgC,OAG1DC,EAAgB,IAAIN,QAAQ,SAACC,GACjCd,EAAKgB,iBAAiB,QAAS,WAC7BF,EAAQ,iCAGVd,EAAKgB,iBAAiB,cAAe,SAACI,GACpCA,EAAYC,iBAEZP,EAAQ,mCAINQ,EAAe,IAAIT,QAAQ,SAACC,GAC5BS,IAAAA,GAAQ,EACRC,GAAS,EAEbxB,EAAKgB,iBAAiB,YAAa,SAACS,GAC1BA,OAAAA,EAAQC,QACT,KAAA,EACHH,GAAQ,EACR,MAEG,KAAA,EACHC,GAAS,EAITD,GAASC,GACXV,EAAQ,kCAKdF,EACGe,KACC,SAAAb,GAAWX,OAAAA,EAAoBW,WAAAA,IAC/B,SAAAC,GAAUZ,OAAAA,EAAmBY,UAAAA,KAGjCI,EACGQ,KACC,SAAAb,GAAWX,OAAAA,EAAoBW,WAAAA,KAGnCQ,EAAaK,KAAK,SAAAb,GAAWX,OAAAA,EAAoBW,WAAAA","file":"main.c16106c7.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst body = document.querySelector('body');\n\nconst message = (type, text) => {\n  const messageSay = document.createElement('div');\n\n  messageSay.className = `${type}`;\n  messageSay.setAttribute('data-qa', 'notification');\n  messageSay.innerText = `${text}`;\n\n  body.append(messageSay);\n};\n\nconst firstPromise = new Promise((resolve, reject) => {\n  body.addEventListener('click', () => {\n    resolve('First promise was resolved');\n  });\n\n  setTimeout(() => reject(Error('First promise was rejected')), 3000);\n});\n\nconst secondPromise = new Promise((resolve) => {\n  body.addEventListener('click', () => {\n    resolve('Second promise was resolved');\n  });\n\n  body.addEventListener('contextmenu', (withoutMenu) => {\n    withoutMenu.preventDefault();\n\n    resolve('Second promise was resolved');\n  });\n});\n\nconst thirdPromise = new Promise((resolve) => {\n  let leftB = false;\n  let rightB = false;\n\n  body.addEventListener('mousedown', (pressed) => {\n    switch (pressed.button) {\n      case 0:\n        leftB = true;\n        break;\n\n      case 2:\n        rightB = true;\n        break;\n    }\n\n    if (leftB && rightB) {\n      resolve('Third promise was resolved');\n    }\n  });\n});\n\nfirstPromise\n  .then(\n    resolve => message(`success1`, resolve),\n    reject => message(`warning`, reject)\n  );\n\nsecondPromise\n  .then(\n    resolve => message(`success2`, resolve)\n  );\n\nthirdPromise.then(resolve => message(`success3`, resolve));\n"]}